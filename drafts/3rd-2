|Lunes, 31 de Enero de 2011|

	El software de control debe ser capaz de representar señales. Para	|Jueves, 27 de Enero de 2011|
	implementar esta funcionalidad en el software de control se ha
	tomado como referencia el osciloscopio digital. Esta introducción
	puede entenderse como un compendio de las conclusiones que se han
	obtenido en el estudio de este dispositivo. (Debería dar un motivo
	al lector para meterle esto aquí, el primero que se me ocurre es
	que aquí se dan las claves que se han seguido cuando se programaba
	el programa y por tanto es relevante para entender el proceso de
	diseño y desarrollo del software a falta de una información más
	detallada como sería que explicase el código del programa línea por
	línea, así se tiene un concepto general de las decisiones que se
	han tomado durante el desarrollo del software sin entrar en
	demasiados detalles).

	Un osciloscopio digital es una herramienta que se emplea para
	visualizar señales. Es el sucesor de instrumentos de medida como el
	osciloscopio analógico y el oscilógrafo. A diferencia de estos
	aparatos (de carácter analógico, es correcto atendiendo a la nota
	escrita abajo) un osciloscopio digital debe muestrear parte de la
	señal, almacenar la señal digital resultante en memoria y procesar
	esas muestras poder realizar representación alguna. Esto conlleva	antes de poder representar la señal (en pantalla)
	una serie de desventajas, la primera y más inmediata es una
	degradación de la calidad de la representación que aparece como
	consecuencia de la digitalización de la señal. Otro efecto adverso
	es la aparición de un retardo.

	Carácter: Conjunto de cualidades o circunstancias propias de una
	cosa, de una persona o de una colectividad, que las distingue, por
	su modo de ser o obrar, de las demás.

	Esta disminución en la calidad de la representación se ve
	compensada por la imagen nítida que consiguen los osciloscopios
	digitales al carecer de partes móviles o mecánicas... No son partes
	móviles, guiar un haz de electrones mediante el campo
	electromagnético que generan dos grupos de placas metálicas es
	mucho más impreciso que iluminar un array de LEDs utilizando una
	tensión controlada. Por no decir que el haz de electrones tiene que
	enfocarse correctamente así como la intensidad con la que emite el
	tubo de rayos catódicos que debe ajustarse con un potenciómetro.

	Una disminución en la calidad de la representación que se ve
	compensada por la precisión característica de los instrumentos
	digitales y que en la práctica es inapreciable.

	Este retardo es un quebradero de cabeza. Los osciloscopios
	analógicos/dispositivos analógicos actualizan la información por
	pantalla de forma continua. A medida que la señal va tomando
	valores estos aparecen en la pantalla o en el papel. Un
	osciloscopio digital no representa cada muestra que le llega, si no
	que almacena muestras y espera hasta que tiene una información
	significativa que mostrar por pantalla, tras lo cual procesa esa
	información y representa los datos.

	De lo contrario el coste de procesado sería altísimo, pero eso no
	es un motivo que pueda explicar sin más.

	El software de control debe permitir al usuario visualizar la señal
	con la que se trabaja. Una de las funciones del software de control
	es representar señales/la señal de interés/la señal con la que se
	trabaja. Para implementar este aspecto del software se ha tomado
	como modelo/referencia/arquetipo

	La función principal del software de control/No es que sea la
	principal función, si no que es la principal función que debo
	implementar yo como proyectista. Como se verá en adelante/más
	adelante/en secciones posteriores/en apartados posteriores a esta
	introducción. En apartados posteriores se explica o se da una
	explicación. El SDK Software Development Kit, La parte concerniente
	a la entidad de control y presentación, El software de control se
	ha desarrollado en el entorno de desarrollo que ofrece MATLAB, se
	dan más detalles más adelante. (Puedo cambiar la estructura del
	documento para que lleve Introducción [Entidades en el subsistema
	de control y presentación], Entorno de desarrollo, Herramientas
	proporcionadas por el entorno de desarrollo, y Diseño conceptual el
	osciloscopio digital como modelo.

	El caso es que MATLAB, no sólo funciona como un perfecto entorno de
	desarrollo, si no que también aporta una máquina virtual en la que
	se puede correr código sencillo y potente al mismo tiempo. MATLAB
	abstrae la mayoría del código complejo, interacción con los
	drivers, llamadas al sistema, para que el desarrollador se centre
	en la creatividad.

	Bien, siendo este el caso debería decir algo así:

	La principal del desarrollo en cuanto al software de control del
	que soy yo responsable es la de implementar una aplicación que
	interactúe con el usuario, que le dé la capacidad de controlar la
	tarjeta, pero más importante aún que le muestre los datos que
	quiere. Vale lo que he dicho en la frase anterior resume el
	concepto que tenía yo de entidad de control y presentación.

	La principal labor de desarrollo en cuanto al software de control
	se ha centrado en implementar un componente capaz de mostrar por
	pantalla una representación gráfica de la señal a partir de las
	muestras procedentes de la tarjeta de adquisición. La gran mayoría
	de tareas sencillas/básicas (como representar datos o interactuar
	con el sistema operativo) son facilitadas por el entorno de de
	desarrollo. El desarrollador/programador, en este caso yo, su
	principal tarea ha consistido en escribir una rutina

	El software de control debe ser capaz de representar señales. Para	|Versión más valorada|
	implementar esta funcionalidad en el software de control se ha
	tomado como referencia el osciloscopio digital. Esta introducción
	puede entenderse como un compendio de las conclusiones que se han
	obtenido en el estudio de este dispositivo. (Debería dar un motivo
	al lector para meterle esto aquí, el primero que se me ocurre es
	que aquí se dan las claves que se han seguido cuando se programaba
	el programa y por tanto es relevante para entender el proceso de
	diseño y desarrollo del software a falta de una información más
	detallada como sería que explicase el código del programa línea por
	línea, así se tiene un concepto general de las decisiones que se
	han tomado durante el desarrollo del software sin entrar en
	demasiados detalles).

	Un osciloscopio digital es una herramienta que se emplea para
	visualizar señales. Es el sucesor de instrumentos de medida como el
	osciloscopio analógico y el oscilógrafo. A diferencia de estos
	aparatos (de carácter analógico, es correcto atendiendo a la nota
	escrita abajo) un osciloscopio digital debe muestrear parte de la
	señal, almacenar la señal digital resultante en memoria y procesar
	esas muestras poder realizar representación alguna. Esto conlleva
	una serie de desventajas, la primera y más inmediata es una
	degradación de la calidad de la representación que aparece como
	consecuencia de la digitalización de la señal. Otro efecto adverso
	es la aparición de un retardo.

	 ,._
	@"_.)6
	 ''''

	//Elección de un entorno de desarrollo//			|Lunes, 31 de Enero de 2011|

	He sufrido otro bloqueo, voy a intentar quitarle hierro al asunto
	escribiendo sin más.
	En la introducción de la memoria, al menos, de la primera parte
	(ahí está el truco por el cual no puedo incluir un capítulo suelto
	antes del título que da paso a la primera parte para dar la
	definición del sistema de medida digital), hago una definición
	formal de lo que es un sistema digital de medida. Ahí explico que
	un sistema de medida es un conjunto de varios elementos cuya
	función es medir. Después expongo que los distintos elementos o
	entidades que integran un sistema de medida pueden agruparse según
	su función y así concebir un sistema como una pila de capas
	funcionales que se sirven unas de otras para cumplir con la función
	del sistema, por decirlo de algún modo. Entonces en el tercer
	capítulo, concerniente a los elementos del sistema que le dan al
	usuario control sobre el sistema y los elementos que muestran la
	información que obtiene el sistema, explico cuales son las
	funciones de cada uno de esos bloques en este caso particular.

	A piece of software que podría traducir como un programa de
	software o simplemente un software.

	La plataforma de desarrollo que se ha empleado para el desarrollo
	del software de control es matlab. Se ha seleccionado esta
	plataforma

	Bueno, esto es un borrador y puedo escribir cuantas cosas quiera
	sin preocuparme de que sean correctas. La razón por la que se ha
	seleccionado Matlab para el desarrollo del software de control, en
	realidad son varias razones o una muy larga que las abarca todas,
	las razones son que es una plataforma especializada que potencia el
	desarrollo de aplicaciones de uso matemático o técnico, es muy
	completa gracias a que incorpora multitud de módulos o librerías
	que ponen al alcance del desarrollador funciones, comandos y otro
	tipo de herramientas que facilitan su labor (he aquí el caso
	particular de la DAT), utiliza un lenguaje sencillo y fácilmente
	inteligible/comprensible.

	Matlab es la plataforma que se ha utilizado para desarrollar el
	software de control. Es una plataforma de desarrollo bien conocida
	en ambientes tecnológicos/entornos técnicos y matemáticos, que
	emplea un lenguaje sencillo y fácilmente asimilable, asimismo
	incorpora multitud de módulos que amplían su funcionalidad y la
	convierten en una herramienta sencilla, potente y completa que
	simplifica la labor del desarrollador. La principal razón por la
	que se ha seleccionado Matlab para el desarrollo de la aplicación
	de control es que uno de los módulos que incorpora lleva ya
	implementada la mayoría de las funciones atribuidas al bloque de
	control del subsistema. Este módulo se conoce como <<herramienta de
	adquisición de datos>> o en inglés emph(data acquisition toolbox),
	a partir de aquí DAT, y es compatible con la tarjeta de adquisición
	que se ha empleado en el proyecto. Además Matlab ofrece facilidades
	para el desarrollo de interfaces gráficas de usuario gracias a que
	incorpora el módulo GUIDE o Graphical User Interface Development
	Environment.

	Eso de «lleva ya implementada», si es un módulo debería decir lleva
	ya implementado

	A continuación se describen los elementos que intervienen en el
	funcionamiento de la DAT,

	Malab es la plataforma que se ha utilizado para desarrollar el
	software de control. Es una plataforma de desarrollo bien conocida
	en entornos matemáticos y tecnológico, que emplea un lenguaje
	sencillo y fácilmente asimilable, y porque incorpora multitud de
	módulos que amplían su funcionalidad

	La plataforma que se ha seleccionado para desarrollar el software
	de control es Matlab. Es una plataforma de desarrollo bien conocida
	en entornos matemáticos y tecnológicos por varias razones. Emplea
	un lenguaje sencillo y claro, especialmente pensado para llevar a
	cabo operaciones matemáticas complejas. Además incorpora multitud
	de módulos que amplían su funcionalidad añadiendo nuevas
	capacidades que pueden ser utilizadas fácilmente. Todo ello
	convierte a Matlab en una plataforma cuyo manejo es sencillo pero
	que, al mismo tiempo, se muestra completa y potente.

	Para el desarrollo del software de control se ha empleado MATLAB.
	Date cuenta que estoy afirmando siempre en pretérito perfecto
	compuesto. Podría intentar evitarlo.

	El software de control se desarrolla utilizando la plataforma
	MATLAB. Esta sería una versión en gerundio.

	Antes de hablar de MATLAB como plataforma de desarrollo y de GUIDE
	y DAT, tendría que escoger que estructura quiero darle al capítulo.
	La Introducción está clara, después entra una sección que trata
	sobre la plataforma/entorno en el que se desarrolla el software de
	control, y, por último, viene una sección que trata el diseño del
	software primero exponiendo los requisitos que debe cumplir el
	software y luego explicando el concepto que se toma como modelo
	para el desarrollo del código.


	 oo_		 oO_
	<;__)----	.;_,)----
	 " "		 " "

	Se ha seleccionado MATLAB para desarrollar el software de control.
	MATLAB es una plataforma de desarrollo bien conocida en entornos
	matemáticos y tecnológicos, de uso destacado en universidades y
	otros centros educativos y de investigación. Emplea un lenguaje
	propio enfocado a un uso matemático, simplificando el manejo de
	matrices y vectores. Se emplea principalmente en la resolución de
	cálculos matemáticos complejos y la representación de funciones y
	datos. No obstante, su principal valor como herramienta destinada a
	la investigación

	Puede definirse como un kit de desarrollo de software (SDK) que
	emplea un lenguaje de programación propio enfocado a un uso
	matemático, simplificando el manejo de matrices y vectores. Al
	entorno integrado de desarrollo (IDE), elemento principal del SKD
	se suman un conjunto de módulos y herramientas que abstraen al
	desarrollador de implementar las tareas más cotidianas y que
	convierten a MATLAB en una plataforma potente y completa.

	¿En que no estoy de acuerdo o por qué no puedo continuar con lo que
	tengo?

	...se emplea en la resolución de cálculos... el qué se emplea, el
	lenguaje no, puesto que no tiene la capacidad de representar
	funciones; en ese caso, si ya estoy hablando de la API, debería
	dejarlo claro antes.

	//MATLAB compilation//

	Se ha seleccionado MATLAB para desarrollar el software de control.
	MATLAB es una plataforma de desarrollo bien conocida en entornos
	matemáticos y tecnológicos, de uso destacado en universidades y en
	otros centros educativos y de investigación. Encaja en la
	definición de kit de desarrollo de software (SDK) al incorporar un
	entorno integrado de desarrollo (IDE) que cuenta con editor,
	compilador, depurador y constructor de interfaces gráficas de
	usuario; al que se suman un conjunto de módulos y herramientas que
	amplían su funcionalidad convirtiéndolo en un software potente y
	completo. Emplea un lenguaje propio enfocado a un uso matemático,
	simplificando el manejo de matrices y vectores.

	Los módulos mencionados se comportan como librerías y en conjunto
	como una interfaz de programación de aplicaciones (API) abstrayendo
	al desarrollador de tener que implementar funciones cotidianas como
	la representación de una función o el cálculo de la transformada
	rápida de Fourier. La (verdadera) razón por la cual el software se
	desarrolla en MATLAB es que incorpora un módulo que recibe el
	nombre de herramienta de adquisición de datos (Data acquisition
	toolbox, DAT) que implementa las funciones requeridas para el
	control de un dispositivo de las características de la kpci y que
	es compatible con ésta.

	 ,._		 ,._		 ,._		 ,._
	@;_,)6		@;_,)6		@;_,)6		@;_,)6
	 " "		 " "		 " "		 " "

	¿MATLAB es una IDE, un SDK, un framework o una API?

		IDE (Integrated Development Environment): básicamente se
		trata de un editor, compilador, depurador y constructor de
		interfaces gráficas para el desarrollo de software en un
		lenguaje determinado

		API (Application Programing Interface): Es una capa de
		abstracción que simplifica la implementación de tareas
		cotidianas. Por ejemplo POSIX, que emplea funciones de tipo
		read en lenguaje C es un tipo de API.

		SDK (Software Development KIT): Es una combinación de una
		IDE y una API. Por un lado cuenta con una IDE (editor,
		compilador, depurador) y por otro con utilidades añadidas
		que simplifican el desarrollo de software más complejo.

		Framework: Conjunto de software y librerías diseñado para
		la ejecución de tareas relacionadas de tipo concreto.
		Supongamos que trabajamos en C, puede existir un framework
		para programar robots, otro para programar DSP.

	Definitivamente pienso que MATLAB se ajusta más a la definición de
	SDK. Por un lado tiene una IDE para trabajar con el lenguaje M, el
	lenguaje propio de MATLAB. Y puede decirse que las capacidades del
	lenguaje llegan a la manipulación de datos y a la definición de
	funciones. Las funciones que pueden utilizarse forman parte de lo
	que sería la API, la función plot que está implementada en lenguaje
	de bajo nivel M me simplifica la representación de funciones, es
	decir, se comporta como parte de una API.

	 ,._
	@;_,)6
	 " "

	MATLAB (Laboratorio Matemático) es la plataforma seleccionada para
	el desarrollo del software de control. Es una plataforma de
	desarrollo bien conocida en entornos matemáticos y tecnológicos de
	uso extendido en universidades y otros centros educativos y de
	investigación. Encaja en la descripción de un kit de desarrollo de
	software (SDK) al estar compuesto por un entorno de desarrollo
	integrado (IDE) con editor, compilador y depurador; y una colección
	de módulos y extensiones que en conjunto se comportan como una
	interfaz de programación de aplicaciones (API). MATLAB se
	caracteriza por emplear un lenguaje propio, el lenguaje M, enfocado
	a un uso matemático y que se ha diseñado para simplificar el manejo
	de datos agrupados en estructuras matemáticas complejas como son
	las matrices y los vectores. Los módulos y herramientas que se
	incluyen en el SDK contribuyen a ampliar su funcionalidad,
	convirtiéndolo en un software potente y completo. Estas
	herramientas abstraen al desarrollador de implementar por sí mismo
	en lenguaje M funciones destinadas a realizar operaciones
	cotidianas como representar unos datos por pantalla u obtener la
	FFT de un vector. Existen módulos ---o toolboxes como se los conoce
	en inglés--- mantenidos por la compañía de software, a los que se
	suman los diseñados por los propios usuarios, que abundan en la
	red, disponibles desde la base de datos dispuesta para ello por la
	empresa, con lo que las posibilidades son en la práctica infinitas.
	Además MATLAB cuenta con dos herramientas fundamentales, muy
	ligadas al SDK, una es GUIDE (Graphical User Interface Development
	Environment), una herramienta para el desarrollo de interfaces
	gráficas de usuario (GUI); y otra Simulink, herramienta que se
	emplea para realizar todo tipo de simulaciones.

	Las dos razones principales por las que se utiliza MATLAB son, por
	un lado, las facilidades que aporta en la creación de GUI y manejo
	de señales digitalizadas; y por otro, y aún más importante si cabe,
	que incorpora una herramienta denominada Data Acquisition Toolbox,
	nombre que podría traducirse como Herramienta de Adquisición de
	Datos, en lo sucesivo DAT. La DAT es una herramienta que implementa
	la mayoría de funciones y componentes necesarios para interactuar
	con un dispositivo de las características de la kpci, y que
	convenientemente es compatible con ésta.


	La DAT es una herramienta compuesta por una biblioteca y un
	mecanismo para el intercambio de información, que en conjunto
	permiten mediante código de alto nivel interactuar directamente con
	dispositivos de características similares a las de la tarjeta de
	adquisición kpci, y que es convenientemente compatible con ésta
	tarjeta. En otras palabras, la DAT descarga al desarrollador de la
	responsabilidad de escribir el código necesario para interactuar a
	bajo nivel con el dispositivo de adquisición. En otras palabras,
	puede entenderse la DAT como una API o interfaz que proporciona al
	desarrollador las llamadas necesarias para interactuar directamente
	con dispositivos de adquisición al tiempo que abstrae los
	mecanismos de más bajo nivel que intervienen en el proceso,
	descargando al desarrollador de la responsabilidad de
	implementarlos por él mismo. Lo que, al fin y al cabo puede
	resumirse en que la DAT implementa la mayor parte de lo que en la
	introducción se daba a entender como bloque de control.

	En otras palabras, la DAT implementa todo el bloque de control,
	sólo que me toca a mi llamar al bloque de control cuando sea
	necesario, o lo que es lo mismo me da a mí las herramientas para
	llamar al bloque de control,

	Se describe en detalle en la subsiguiente sección pero lo más
	importante a decir es que las funciones que implementa puede
	utilizarse para leer de la tarjeta para activar la adquisición,
	para detenerla

	Es por este motivo por el que la \datx{} adquiere vital importancia
	en

	Lo que tendría que insinuar ahora es que la dat es uno de los
	motores que mueve el software de control entendiéndola como una api
	sobre la api de matlab sobre la api del sistema operativo. En lugar
	de escribir el código concerniente a la aplicación y explicarlo
	línea por línea, lo que voy es a dar una completa descripción de la
	herramienta, describiendo brevemente cuales son los mecanismos que
	utiliza para comunicarse con el dispositivo y haciendo un compendio
	de las funciones diciendo como pueden y deben usarse.
