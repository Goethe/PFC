|Martes, 8 de Febrero de 2011|

	Dado que la datx simplifica en gran medida la tarea de construir el		|Martes, 8 de Febrero de 2011|
	bloque de control, la principal responsabilidad en el desarrollo
	del software de control se reduce a armar el bloque de
	presentación.
	
				( V )
	________________________m\"/m________________________
				  '
	La GUI de la aplicación como tal forma parte tanto
	del bloque de control, puesto que proporciona los controles
	mediante los cuales el supervisor puede manejar el sistema, como
	del bloque de presentación, pues es en el marco de la interfaz
	donde son representados los datos demandados por el usuario.
	Programar la GUI es al fin y al cabo una tarea común y que no
	requiere mayor explicación. 

	____________________________________________________

	Desde un punto de vista técnico, el bloque de presentación, como
	parte del software de control, comprende todas aquellas rutinas
	destinadas a manipular las muestras obtenidas del buffer de memoria
	de la tarjeta con objeto de traducir dicha información en otra que
	pueda ser interpretada por el supervisor y todas aquellas otras
	cuya función sea representar la información ya formateada en el
	marco de la GUI.

	Desde un punto de vista técnico, el bloque de presentación, como
	parte del software de control, comprende todas aquellas rutinas
	destinadas a manipular la señal digital procedente de la tarjeta de
	adquisición para poder mostrar una información por pantalla. Las
	competencias del bloque de presentación se confunden con las del
	bloque de control en este aspecto del software, puesto que por su
	parte el bloque de control abarca toda la componente de
	configuración del objeto dispositivo, incluida la parte de la
	configuración concerniente a las interrupciones. Para poder operar
	según lo especificado, el bloque de presentación requiere de una
	interrupción que cada cierto número de muestras, dependiendo de las
	opciones seleccionadas por el supervisor, otorgue el control a las
	rutinas que forman parte del bloque.

	Este conjunto formado por configuración y rutinas para manejar
	interrupciones, manipular muestras y mostrar resultados por
	pantalla ---asociado más intuitivamente al bloque de
	presentación--- supone el principal reto en la programación del
	software de control(., considerando/descartando todo aquello que me
	facilita matlab, o que matlab trae hecho por mí, si se obvia todo
	aquello que aporta matlab, dejando de lado lo que aporta matlab,
	esto no sé si tendría que mencionarlo, si ya lo trae matlab en
	ningún caso supone un reto de programación)

	La principal idea que debe transmitir esta introducción al tercer
	apartado es que lo importante de programar todo el bloque de
	presentación es concebir como tiene que ser representada la señal
	digital y ahí es donde entra en juego el osciloscopio digital. Pero
	para llegar a esta conclusión primero tengo que explicar que la
	datx me exime de tener que programar nada más que la GUI y esto,
	que la GUI es una parte de la aplicación común al resto de
	aplicaciones y por eso su proceso de desarrollo no merece mayor
	atención (sólo se tienen que rellenar los callbacks
	correspondientes a los controles incluidos en la GUI utilizando
	para ello las llamadas a la DAT y funciones para manipular valores
	y variables). Que el resto de cosas que tengo que programar son las
	interrupciones, los gestores de interrupciones, que en este caso
	sirven para manipular la señal y mostrar información por pantalla.
	Que los datos numéricos son sencillos de sacar en la pantalla, que
	lo complicado es representar la señal y que lo complicado de esto
	es saber como hacerlo bien y no escribir el código que lo haga.

	Aunque ha resultado sencillo pasar del concepto/papel al código, lo
	difícil ha sido concebir como tenía que ser el resultado para poder
	llegar hasta él.

	Las competencias del bloque de presentación se confunden con las
	del bloque de control en este aspecto del software de control. Al
	bloque de presentación le corresponde manipular la señal digital y
	mostrar la información pertinente en el monitor. Al bloque de
	control le corresponde, a su vez, (ejercer el control) hacer que
	todo el sistema de medida funcione, y esta es una forma resumida de
	decir que se encarga de configurar el objeto dispositivo para que
	cada tantas muestras se genere una interrupción que pase el control
	a una función escrita por el desarrollador (yo) que se encarga de
	operar las muestras y sacar una información por pantalla.

	Digo que el bloque de presentación se ocupa de configurar cuando,
	cada cuantas muestras se tiene que limpiar el buffer de memoria de
	la tarjeta de adquisición y se tienen que mover las muestras a la
	memoria de matlab/del pc. O más bien se encarga de llamar a las
	rutinas pertinentes para manipular las muestras una vez estas
	llegan a matlab. O reduciría el ámbito del bloque de presentación a
	las mismas rutinas que manipulan las muestras y después llaman a
	las funciones de la GUI o de matlab para que los resultados se
	muestren en pantalla. Yo diría que lo apropiado es ésto último y
	que el resto es cosa del bloque de control.

	El momento en que se recogen los datos

	La datx ya se comporta en lo fundamental como el núcleo del bloque
	de control, esta es la razón por la que el proceso desarrollo del
	software no contempla implementar un nuevo bloque que lo sustituya.
	En lugar de ello, se completa este núcleo dotándolo de interfaz
	gráfica. La GUI sirve a dos propósitos, por un lado presenta todos
	los controles necesarios para acceder al bloque de control y de ahí
	al sistema, y por otro sirve como marco en el que representar todos
	los datos especificados en el diseño de la aplicación. En lo
	concerniente a programar la GUI, es necesario programar dos
	aspectos de la misma: están los callbacks que dan cuerpo a los
	controles anteriormente mencionados; y los callbacks responsables
	de mostrar información en el marco proporcionado por la GUI. Los
	callbacks correspondientes a los controles de la GUI sirven para
	poder modificar variables de configuración y son sencillos de
	programar en el sentido a que se trata de una tarea común a todas
	las interfaces gráficas de usuario y que siempre se desenvuelve del
	mismo modo. Por el contrario, definir el modo en que se va a
	mostrar la señal digital en la pantalla resulta complicado, no
	desde el punto de vista de la programación como tal, si no desde un
	punto de vista conceptual.

	|Miércoles, 9 de Febrero de 2011|

	Al disponer de la datx todo el esfuerzo de programación pasa a
	concentrarse en el desarrollo de la GUI y del bloque de
	presentación. La parte de la GUI relacionada con los controles es
	sencilla de programar, es una tarea rutinaria común en el
	desarrollo de aplicaciones con interfaz gráfica. Únicamente es
	necesario escribir los callbacks enlazados a los controles de la
	GUI, rutinas que principalmente sirven para modificar las variables
	de configuración del objeto dispositivo. En todo caso, cabría
	destacar el mecanismo con el cual pueden pasarse variables a una
	GUI para modificarlas o revisar su contenido, en cuanto al resto,
	no merece mayor atención y se ha descartado como posible contenido
	en la memoria.

	En cambio, programar el bloque de presentación requiere de un
	esfuerzo mayor en cuanto a que se trata de un reto (de
	programación) único y diferente. Desde un primer momento queda
	claro que la principal complicación en lo concerniente al
	desarrollo de esta parte del software radica en concebir o decidir
	de que modo han de ser representados los datos para mostrar la
	información de interés de forma eficaz. En cuanto a los datos
	numéricos no cabe ninguna duda, sin embargo, no ocurre lo mismo con
	las representaciones gráficas de la señal y su espectro. Dada la
	complejidad de esta tarea se decide tomar un modelo como referencia
	y construir el bloque de presentación de acuerdo con los patrones
	de comportamiento observados en el modelo. El modelo adoptado para
	su estudio es el osciloscopio digital

	Elegí el osciloscopio digital sin plantearme siquiera alternativa
	ninguna, cuando pensé en representar señales me vino enseguida a la
	cabeza, pero realmente fue el director de proyecto el que me
	sugirió que la aplicación tenía que mostrar una representación de
	la señal del tipo de las que sacan los osciloscopios. Así es que
	toda esta parrafada podría ir sobrando, lo importante es decir que
	una vez elegida la plataforma para trabajar con el software de
	control y sabiendo que tengo un módulo que me ahorra tener que
	programar el bloque de control, lo único que tengo que hacer es
	programar el resto de la GUI. La GUI forma parte del software de
	control y, por tanto, forma parte de los dos bloques presentes en
	el software al mismo tiempo. La parte correspondiente al bloque de
	control son los controles que deben programarse para que desde
	ellos el supervisor pueda alterar los parámetros de la sesión de
	adquisición y bla, bla, bla. Es una tarea sencilla por ser
	rutinaria y común. La parte de la GUI correspondiente al bloque de
	presentación tiene que ver con la representación de datos. Los
	datos numéricos son sencillos de sacar por pantalla pero
	representar la señal y su espectro es otra cosa. A petición o según
	las sugerencia del director del proyecto, o simplemente siguiendo
	uno de los criterios que me impone Alberto, tengo que conseguir que
	la señal se represente en la GUI del mismo modo que es representada
	en un osciloscopio digital. Es complicado hacer eso, pero no desde
	el punto de vista técnico, programarlo es sencillo una vez se
	tienen las ideas para el diseño, es complicado desde el punto de
	vista conceptual.

	Una vez seleccionada la plataforma con la que trabajar con el
	software de control, MATLAB, y conociendo en profundidad la datx,
	la herramienta que servirá como bloque de control, únicamente es
	necesario programar la interfaz gráfica de la aplicación y la parte
	del software relacionada con el bloque de presentación.

	Una vez se ha estudiado en profundidad la datx, puede emplearse
	esta herramienta para programar el software de control sin
	necesidad de implementar la mayoría de funciones correspondientes
	al bloque de control. A partir de ahí, el principal esfuerzo debe
	realizarse en el desarrollo de la GUI y la parte relacionada con el
	bloque de presentación. La interfaz está relacionada al mismo
	tiempo con ambos bloques funcionales del subsistema, donde los
	controles forman parte del bloque de control y los gráficos y.

	Habiendo estudiado la datx en profundidad,

	el esfuerzo restante, (lo único) que resta por programar, sólo
	resta por programar

	Lo único que me queda por programar correspondiente al bloque de
	control son los callbacks relacionados con los controles de la GUI
	y que sirven para modificar los aspectos pertinentes de la sesión
	de adquisición cuando el supervisor acciona los controles
	adecuados.

	Habiendo estudiado la datx en profundidad, y sabiendo que puede
	utilizarse como núcleo del bloque de control, tan sólo queda por
	realizar en lo correspondiente a este bloque del subsistema los
	controles de la GUI. Para ello deben programarse los callbacks
	relacionados con dichos controles, rutinas que se activan al
	accionar el control pertinente y que sirven principalmente para
	modificar aspectos de la sesión de adquisición a partir de las
	variables relacionadas con los objetos dispositivo. Esta es una
	tarea rutinaria y, por lo tanto, sencilla, común a la programación
	de cualquier aplicación con interfaz gráfica en matlab, por lo que
	no requiere de mayor atención. A partir de ahí, el mayor esfuerzo
	que debe realizarse para finalizar el software consiste en
	programar el bloque de presentación. El bloque de presentación
	engloba toda aquella rutina o función, todo aquel fragmento de
	código cuya utilidad está relacionada con la representación de
	datos por pantalla. Los datos numéricos son sencillos de
	representar, únicamente deben efectuarse los cálculos aritméticos
	necesarios a partir de las muestras de la señal y modificar el
	valor de una determinada variable cada cierto tiempo. Sí es
	importante programar estas rutinas utilizando un modelo basado en
	interrupciones y gestión de interrupciones para que la
	actualización de datos ocurra automáticamente según lo esperado. La
	representación gráfica de la señal es más compleja. Requiere un
	proceso de diseño previo en el que deben tomarse decisiones
	importantes a nivel conceptual, después la implementación en código
	es más sencilla. Sin embargo, existe una idea clara de las
	capacidades que debe tener el software de control en cuanto a la
	representación de señales con anticipación al inicio del proyecto,
	por lo que este proceso de diseño se ve simplificado
	significativamente. Atendiendo al criterio del director de PFC y
	por decisión mutua entre el director y el proyectista, el software
	de control debe ser capaz de representar la señal del modo en que
	lo hacen los osciloscopios digitales, además en un marco distinto
	dentro de la GUI debe representarse el espectro de la señal que se
	ve en pantalla.

	Como si fuera

	Dado que el director de proyecto tiene una idea clara de las
	capacidades que debe tener el software de control este proceso de
	diseño no resulta necesario.

	Requiere un proceso de diseño previo que yo me he ahorrado porque
	el director de PFC tenía una idea clara de lo que quería que
	hiciese, quería que representase la señal como lo hace un
	osciloscopio y que al lado o en otra ventana en la GUI tuviese el
	espectro en frecuencia. Afortunadamente, el director de PFC tiene
	una idea clara de como quiere que se comporte el software de
	control y me indica que el software debe representar la señal como
	si se tratase de un osciloscopio. Además me sugiere...

	¿Que es el bloque de presentación o que entiendo yo o he definido
	yo como bloque de presentación? Son todas aquellas funciones o
	rutinas o todo aquel fragmento de código cuya utilidad está
	relacionada con la representación de datos por pantalla. ¿Datos?
	Cálculos numéricos o aritméticos a partir de muestras o
	representación gráfica de señales a partir de señales digitales.
